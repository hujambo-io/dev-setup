---
- name: Setup Development Environment
  hosts: localhost
  vars:
    tools:
      - name: git
        roles: ["default"]
        platforms:
          type: universal

      - name: wget
        roles: ["default"]
        platforms:
          type: universal

      - name: vim
        roles: ["default"]
        platforms:
          type: universal

      - name: htop
        roles: ["default"]
        platforms:
          type: universal

      - name: tree
        roles: ["default"]
        platforms:
          type: universal

      - name: jq
        roles: ["default"]
        platforms:
          type: universal

      - name: nvm
        roles: ["frontend"]
        platforms:
          type: universal

      - name: python
        roles: ["default"]
        platforms:
          type: universal

      - name: ffmpeg
        roles: ["full-stack"]
        platforms:
          type: universal

      - name: ruby
        roles: ["default"]
        platforms:
          type: universal

      - name: r
        roles: ["full-stack"]
        platforms:
          type: universal

      - name: rstudio
        roles: ["full-stack"]
        platforms:
          type: universal

      - name: android-sdk
        roles: ["mobile"]
        platforms:
          type: universal

      - name: android-studio
        roles: ["mobile"]
        platforms:
          type: universal

      - name: mongodb-compass
        roles: ["full-stack"]
        platforms:
          type: universal

      - name: slack
        roles: ["default"]
        platforms:
          type: universal

      - name: zoom
        roles: ["default"]
        platforms:
          type: universal

      - name: postman
        roles: ["default"]
        platforms:
          type: universal

      - name: k6
        roles: ["QA"]
        platforms:
          type: universal

      - name: httpie
        roles: ["default"]
        platforms:
          type: universal

      - name: bruno
        roles: ["default"]
        platforms:
          type: universal

      - name: selenium-server
        roles: ["QA"]
        platforms:
          type: universal

      - name: firefox
        roles: ["default"]
        platforms:
          type: platform-specific
          Darwin:
            install_type: standard
          Linux:
            install_type: standard:firefox
          Windows:
            install_type: standard:firefox

      - name: curl
        roles: ["default"]
        platforms:
          type: universal

      - name: zsh
        roles: ["default"]
        platforms:
          type: universal

      - name: tmux
        roles: ["default"]
        platforms:
          type: universal

      - name: telnet
        roles: ["default"]
        platforms:
          type: universal

      - name: docker
        roles: ["default"]
        platforms:
          type: universal

      - name: miniconda
        roles: ["backend"]
        platforms:
          type: universal

      - name: flutter
        roles: ["mobile"]
        platforms:
          type: universal

      - name: cocoapods
        roles: ["mobile"]
        platforms:
          type: platform-specific
          Darwin:
            install_type: standard
            # shell:brew install brew-gem && && brew link --force brew-gem && gem install cocoapods

      - name: android-platform-tools
        roles: ["mobile"]
        platforms:
          type: universal

      - name: fastlane
        roles: ["mobile"]
        platforms:
          type: universal

      - name: google-chrome
        roles: ["default"]
        platforms:
          type: platform-specific
          Darwin:
            install_type: standard
          Linux:
            install_type: standard:google-chrome-stable
          Windows:
            install_type: standard:googlechrome

      - name: microsoft-edge
        roles: ["default"]
        platforms:
          type: platform-specific
          Darwin:
            install_type: standard
          Linux:
            install_type: standard:microsoft-edge-stable
          Windows:
            install_type: standard:microsoft-edge

      - name: visual-studio-code
        roles: ["default"]
        platforms:
          type: universal

      - name: intellij-idea-ce
        roles: ["default"]
        platforms:
          type: universal

      - name: netbeans
        roles: ["full-stack"]
        platforms:
          type: platform-specific
          Darwin:
            install_type: standard
          Linux:
            install_type: standard:netbeans-linux-deb-package
          Windows:
            install_type: standard:netbeans

      - name: eclipse-java
        roles: ["full-stack"]
        platforms:
          type: universal

      - name: papyrus
        roles: ["full-stack"]
        platforms:
          type: platform-specific
          Darwin:
            install_type: standard
          Linux:
            install_type: standard:papyrus-linux-deb-package
          Windows:
            install_type: standard:papyrus

      - name: font-fira-code
        roles: ["default"]
        platforms:
          type: universal

      - name: syncthing
        roles: ["default"]
        platforms:
          type: platform-specific
          Darwin:
            install_type: syncthing
          Linux:
            install_type: standard:syncthing
          Windows:
            install_type: standard:syncthing

      - name: cypher-shell
        roles: ["full-stack"]
        platforms:
          type: universal

      - name: protobuf-compiler
        roles: ["default"]
        platforms:
          type: platform-specific
          # Darwin:
            # install_type: standard:protobuf
          Linux:
            install_type: standard:protobuf-compiler
          Windows:
            install_type: shell:choco install protoc -y

      - name: build-essential
        roles: ["default"]
        platforms:
          type: platform-specific
          # Darwin:
            # install_type: shell:xcode-select --install
          Linux:
            install_type: standard:build-essential
          Windows:
            install_type: standard:build-tools

      - name: apt-transport-https
        roles: ["default"]
        platforms:
          type: Linux

      - name: ca-certificates
        roles: ["default"]
        platforms:
          type: Linux

      - name: gnupg
        roles: ["default"]
        platforms:
          type: Linux

      - name: lsb-release
        roles: ["default"]
        platforms:
          type: Linux

      - name: oh-my-posh
        roles: ["default"]
        platforms:
          type: universal

      - name: oh-my-zsh
        roles: ["default"]
        platforms:
          type: platform-specific
          # Darwin:
            # install_type: shell:sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"  
          Linux:    
            install_type: shell:sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"  
            

      - name: neo4j
        roles: ["full-stack"]
        platforms:
          type: universal

#      - name: neo4j-desktop
#        roles: ["full-stack"]
#        platforms:
#          type: platform-specific
#          Darwin:
#            install_type: special:neo4j_desktop_install
#          Linux:
#            install_type: special:neo4j_desktop_install
#          Windows:
#            install_type: special:neo4j_desktop_install

      - name: zip
        roles: ["default"]
        platforms:
          type: universal

      - name: sdkman
        roles: ["default"]
        platforms:
          type: platform-specific
          Darwin:
            install_type: special:sdkman_install


  tasks:

    - name: Install ansible.windows collection
      ansible.builtin.shell: |
        ansible-galaxy collection install ansible.windows
      tags:
        - setup

    - name: Install Chocolatey on Windows
      ansible.builtin.raw: |
        Set-ExecutionPolicy Bypass -Scope Process -Force;
        [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12;
        iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
      when: ansible_facts['os_family'] == "Windows"
      tags:
        - setup

    - name: Install universal tools
      ansible.builtin.package:
        name: "{{ item.name }}"
        state: present
      loop: "{{ tools | selectattr('platforms.type', 'equalto', 'universal') | list }}"
      tags:
        - always

    - name: Install platform-specific tools
      ansible.builtin.shell:
        cmd: >
          {% if item.platforms[ansible_facts['os_family']]['install_type'].startswith('standard:') %}
            {{ item.platforms[ansible_facts['os_family']]['install_type'].split(':', 1)[1] }}
          {% elif item.platforms[ansible_facts['os_family']]['install_type'].startswith('shell:') %}
            {{ item.platforms[ansible_facts['os_family']]['install_type'].split(':', 1)[1] }}
          {% else %}
            echo "Unsupported install_type for {{ item.name }}"
          {% endif %}
      loop: "{{ tools | selectattr('platforms.type', 'equalto', 'platform-specific') | list }}"
      when: item.platforms[ansible_facts['os_family']] is defined
      tags:
        - always

    - name: Install SDKMAN
      ansible.builtin.shell:
        cmd: |
          curl -s "https://get.sdkman.io" | bash && \
          echo 'export SDKMAN_DIR="$HOME/.sdkman"' >> ~/.zshrc && \
          echo '[[ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]] && source "$SDKMAN_DIR/bin/sdkman-init.sh"' >> ~/.zshrc && \
          source ~/.zshrc
      when: item.platforms.install_type is defined and item.platforms.install_type == "special:sdkman_install"
      tags:
        - always

#    - name: Install Neo4j Desktop on Darwin
#      ansible.builtin.shell: |
#        curl -O https://neo4j.com/artifact.php?name=neo4j-desktop-1.5.8.dmg &&
#        hdiutil attach neo4j-desktop-1.5.8.dmg &&
#        cp -R /Volumes/Neo4j\ Desktop/Neo4j\ Desktop.app /Applications &&
#        hdiutil detach /Volumes/Neo4j\ Desktop
#      when: ansible_facts['os_family'] == "Darwin"
#      args:
#        creates: /Applications/Neo4j\ Desktop.app
#      tags:
#        - full-stack

#    - name: Install Neo4j Desktop on Linux
#      ansible.builtin.shell: |
#        wget https://neo4j.com/artifact.php?name=neo4j-desktop-1.5.8-linux.deb &&
#        sudo dpkg -i neo4j-desktop-1.5.8-linux.deb
#      when: ansible_facts['os_family'] == "Linux"
#      args:
#        creates: /usr/bin/neo4j-desktop
#      tags:
#        - full-stack

#    - name: Install Neo4j Desktop on Windows
#      ansible.windows.win_chocolatey:
#        name: neo4j-desktop
#        state: present
#      when: ansible_facts['os_family'] == "Windows"
#      tags:
#        - full-stack

